<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_419571_gamify_player_desires</collection>
        <condition>current.desire.changes() || current.actual.changes()</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Sync Process Desire Counts</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[// Efficiency improvements.
// Don't run on previous if previous didn't exist.  If it's a new record.
// Can we do a more bulk update?
// Use sub functions to clean up read-ability. 

(function executeRule(current, previous /*null when async*/ ) {

    if (current.desire.changes()) {
		
		if (previous.desire.nil()) {
			// if previous is null, then this is an insert.  No previous to update.
			gs.debug("This is an insert.  No previous to update");
			gs.info("Testing use of gs.info.  Does it show in debug log?");
			gs.warn("This is a warning message");
			gs.error("This is an error message");
			gs.addInfoMessage("Info Message.  No previous record");
			gs.addErrorMessage("Error Message. No previous record");
		
		}
		
		// another way to decifer an insert vs an update can use this
		
		if (current.operation() == "insert"){
			gs.addInfoMessage("THis was an insert, so no previous record");
			
		}

        //gs.addInfoMessage("About to run script on Targets");


        var gr_old = new GlideRecord("x_419571_gamify_process_desire");

        //gr.addQuery("column_name", "operator if not equals", "value");
        gr_old.addQuery("process", previous.process);
        gr_old.addQuery("desire", previous.desire.getDisplayValue());
        gr_old.query();

        if (gr_old.next()) {
            //gr_old.target = gr_old.target - 1;
            gr_old.target--;
            gr_old.update();
        }

        var gr_new = new GlideRecord("x_419571_gamify_process_desire");

        gr_new.addQuery("process", current.process);
        gr_new.addQuery("desire", current.desire.getDisplayValue());
        gr_new.query();

        if (gr_new.next()) {
            //gr_new.target = gr_new.target + 1;
            gr_new.target++;
            gr_new.update();
        }

    } // if current.desire.changes


    // If players actual desire level changes, then update the actual values for teh before and after desires

    if (current.actual.changes()) {

        //gs.addInfoMessage("About to run script on Actuals");

        // decrease total count on process level old desire 
        var pdActualold = new GlideRecord("x_419571_gamify_process_desire");

        pdActualold.addQuery("process", previous.process);
        pdActualold.addQuery("desire", previous.actual.getDisplayValue());
        pdActualold.query();

        if (pdActualold.next()) {

            //	gs.addInfoMessage("record found to decrement. desire = " + pdActualold.desire.getDisplayValue());

            //pdActualold.actual = pdActualold.actual - 1;
            pdActualold.actual--;
            pdActualold.update();

        }

        // increase total count on current process level desire

        var pdActualNew = new GlideRecord("x_419571_gamify_process_desire");

        //gs.addInfoMessage("New actual value to query with = " + current.desire.getDisplayValue());

        pdActualNew.addQuery("process", current.process);
        pdActualNew.addQuery("desire", current.actual.getDisplayValue()); // the current doens't work. it shows previous 
        pdActualNew.query();

        if (pdActualNew.next()) {

            //gs.addInfoMessage("record found to increment desire = " + pdActualNew.actual.getDisplayValue());

            //pdActualNew.actual = pdActualNew.actual + 1;
            pdActualNew.actual++;
            pdActualNew.update();
        }


    }

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-03-10 18:32:52</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>16efe25cdba74010d0cd8a18489619cf</sys_id>
        <sys_mod_count>48</sys_mod_count>
        <sys_name>Sync Process Desire Counts</sys_name>
        <sys_overrides/>
        <sys_package display_value="Gamify" source="x_419571_gamify">d7ed3d98dbe34010d0cd8a184896191d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Gamify">d7ed3d98dbe34010d0cd8a184896191d</sys_scope>
        <sys_update_name>sys_script_16efe25cdba74010d0cd8a18489619cf</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-03-20 21:01:51</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=16efe25cdba74010d0cd8a18489619cf"/>
</record_update>
